syntax = "proto3";

import "interface/configs.proto";

message Header {
  fixed32 seq = 1;
  fixed32 timestamp = 2;
}

message RawAdcUpdate {
  Header header = 1;
  bool valid = 2;
  repeated float values = 3;
}

message TriggerUpdate {
  Header header = 1;
  int32 trigger = 2;
}

enum SensorFault {
  NoFault = 0;
  RangeFault = 1;
  ConnectionFault = 2;
}

message SensorUpdate {
  float value = 1;
  SensorFault fault = 2;
}

message SensorsUpdate {
  Header header = 1;
  optional SensorUpdate ManifoldPressure = 2;
  optional SensorUpdate IntakeTemperature = 3;
  optional SensorUpdate CoolantTemperature = 4;
  optional SensorUpdate BatteryVoltage = 5;
  optional SensorUpdate ThrottlePosition = 6;
  optional SensorUpdate AmbientPressure = 7;
  optional SensorUpdate FuelRailTemperature = 8;
  optional SensorUpdate ExhaustGasOxygen = 9;
  optional SensorUpdate FuelRailPressure = 10;
  optional SensorUpdate EthanolContent = 11;
}

enum DecoderState {
  NoSync = 0;
  RpmOnly = 1;
  Sync = 2;
}

enum DecoderLossReason {
  NoLoss = 0;
  ToothVariation = 1;
  TriggerCountTooHigh = 2;
  TriggerCountTooLow = 3;
  Expired = 4;
  Overflowed = 5;
}

message DecoderUpdate {
  Header header = 1;
  fixed32 valid_before_timestamp = 2; 

  DecoderState state = 3;
  DecoderLossReason state_cause = 4;

  float last_angle = 5;
  float instantaneous_rpm = 6;
  float average_rpm = 7;
}

message EngineUpdate {
  Header header = 1;
  DecoderUpdate position = 2;
  SensorsUpdate sensors = 3;

  float advance = 4;
  float dwell_us = 5;
  float fuel_us = 6;

  float airmass_per_cycle = 7;
  float fuelvol_per_cycle = 8;

  float tipin_percent = 9;
  float injector_dead_time = 10;
  float pulse_width_correction = 11;
  float lambda = 12;
  float ve = 13;
  float engine_temp_enrichment = 14;

  bool rpm_limit_cut = 15;
  bool boost_cut = 16;
  bool fuel_overduty_cut = 17;
}

message PingResponse {
}

message RequestResponse {
  Header header = 1;
  oneof type {
    PingResponse ping = 2;
    Configuration configuration = 3;
  }
}

message Response {
  oneof response {
    TriggerUpdate trigger_update = 1;
    DecoderUpdate decoder_update = 2;
    SensorsUpdate sensors_update = 3;
    EngineUpdate engine_update = 4;
    RequestResponse request_response = 15;
  }
}

message Ping {
}

message Request {
  fixed32 seq = 1;
  oneof type {
    Ping ping = 2;
    Configuration set_configuration = 3;
  }
}
